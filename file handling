#include<iostream>
#include<fstream>
using namespace std;

class Student{
    int rollno;
    char name[30];
    char div;
    char add[30];

    public:
        void accept(){
            cout<<"\nEnter rollno.: ";
            cin>>rollno;
            cout<<"\nEnter name: ";
            cin>>name;
            cout<<"\nEnter division: ";
            cin>>div;
            cout<<"\nEnter address: ";
            cin>>add;
        }

        void display(){
            cout<<rollno<<"\t"<<name<<"\t"<<div<<"\t"<<add;
        }

        int grtrollno(){
            return rollno;
        }
};


void addrecord(){
    int n;
    Student s;
    ofstream out("ABC.txt");
    cout<<"\nEnter the number of student you want to add: ";
    cin>>n;
    for(int i=0;i<n;i++){
        cout<<"\n";
        s.accept();
        out.write((char*)&s,sizeof(s));
    }
    out.close();
}

void addnewrecord(){
    ofstream out("ABC.txt",ios::app);
    Student s;
    s.accept();
    out.write((char*)&s,sizeof(s));
    out.close();
}

void displayrecord(){
    ifstream inf("ABC.txt");
    Student s;
    cout<<"\nRollno\tName\tDivision\tAddress";
    cout<<"\n";
    while(inf.read((char*)&s,sizeof(s))){ 
        cout<<"hi";
        s.display();
        cout<<"\n";
    }
    inf.close();
}

void search(int r){
    ifstream inf("ABC.txt");
    int flag=0;
    Student s;
    while(inf.read((char*)&s,sizeof(s))){
        if(s.grtrollno()==r){
            flag=1;
            cout<<"\nRecord found";
            cout<<"\nRollno\tName\tDivision\tAddress\n";
            s.display();
            break;
        }
    }
    if(flag==0){
        cout<<"\nrecord not found";
    }
    inf.close();
}

void update(int r){
    ifstream inf("ABC.txt");
    ofstream out("temp.txt");
    int flag=0;
    Student s;
    while(inf.read((char*)&s,sizeof(s))){
        if(s.grtrollno()==r){
            flag=1;
            s.accept();
            out.write((char*)&s,sizeof(s));
            cout<<"\nRecord update";
        }
        else{
            out.write((char*)&s,sizeof(s));
        }
    }
    if(flag==0){
        cout<<"\nRecord not found to update";
    }
    out.close();
    inf.close();
    remove("ABC.txt");
    rename("temp.txt","ABC.txt");
}

void dlerecord(int r){
    ifstream inf("ABC.txt");
    ofstream out("temp.txt");
    int flag=0;
    Student s;
    while(inf.read((char*)&s,sizeof(s))){
        if(s.grtrollno()==r){
            flag=1;
            cout<<"\nRecord deleted";
            continue;
        }
        else{
            out.write((char*)&s,sizeof(s));
        }
    }
    if(flag==0){
        cout<<"\nRecord not found to delete";
    }
    out.close();
    inf.close();
    remove("ABC.txt");
    rename("temp.txt","ABC.txt");
}

int main(){
    int ch,r;
    do{
        cout<<"\n1. Add record";
        cout<<"\n2. Add new record";
        cout<<"\n3. Display record";
        cout<<"\n4. Search record";
        cout<<"\n5. Update record";
        cout<<"\n6. Delete record";
        cout<<"\n7. Exit";
        cout<<"\nEnter your choice: ";
        cin>>ch;

        switch(ch){
            case 1:
            addrecord();
            break;

            case 2:
            addnewrecord();
            break;

            case 3:
            displayrecord();
            break;

            case 4:
            cout<<"\nEnter rollno to search: ";
            cin>>r;
            search(r);
            break;

            case 5:
            cout<<"Enter rollno to update: ";
            cin>>r;
            update(r);
            break;

            case 6:
            cout<<"\nEnter rollno to delete: ";
            cin>>r;
            dlerecord(r);
            break;
        }
    }while(ch!=7);
}
